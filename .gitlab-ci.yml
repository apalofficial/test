stages:
  - external-build
  - build-wait
  - test
  - deploy

external-build-job:
  tags:
    - docker
    - host_network
  secrets:
    TESTNET_CERT:
      vault: corp/build/gltest-testnet/crt@secret
      file: true
    TESTNET_KEY:
      vault: corp/build/gltest-testnet/key@secret
      file: true
  stage: external-build
  image: docker.io/alpine
  script:
    - apk add --update --no-cache dash openssl jq curl
    - ls -l $TESTNET_CERT $TESTNET_KEY
    - curl -s -w "%{http_code}\n" -o /dev/null https://www.google.com
    - dash queue-event.sh
    - cat artifacts/event_id.txt
  artifacts:
    paths:
      - artifacts/event_id.txt

wait-for-completion:
  tags:
    - docker
    - host_network
  stage: build-wait
  secrets:
    TESTNET_CERT:
      vault: corp/build/gltest-testnet/crt@secret
      file: true
    TESTNET_KEY:
      vault: corp/build/gltest-testnet/key@secret
      file: true
  image: docker.io/alpine
  script:
    - apk add --update --no-cache bash openssl jq curl
    - bash wait-for-job.sh
  artifacts:
    paths:
      - artifacts/sourcejob_id.txt
      - artifacts/job_id.txt

scan-job:
  tags:
    - docker
    - host_network
  secrets:
    TESTNET_CERT:
      vault: corp/build/gltest-testnet/crt@secret
      file: true
    TESTNET_KEY:
      vault: corp/build/gltest-testnet/key@secret
      file: true
  stage: test
  image:
    name: quay.io/skopeo/stable:latest
    entrypoint: [""]
  script:
    - export JOB_ID=$(cat artifacts/job_id.txt)
    - mkdir /tmp/registry-certs
    - cp $TESTNET_KEY /tmp/registry-certs/user.key
    - cp $TESTNET_CERT /tmp/registry-certs/user.cert
    - skopeo copy --src-tls-verify=false --dest-tls-verify=false --src-cert-dir /tmp/registry-certs --dest-cert-dir /tmp/registry-certs "docker://staging.docker.akamai.com:5433/build-images-development/basic_connector/test:0.1-$JOB_ID" "docker://staging.docker.akamai.com:5433/xray-pilot-images/basic_connector/test:0.1-$JOB_ID"
    - rm -rf /tmp/registry-certs
    - echo "Scan results will be located at https://staging.repos.akamai.com/ui/repos/tree/Xray/basic_connector/test/-$JOB_ID/manifest.json"

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
