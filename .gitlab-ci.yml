stages:
  - build
  - build-wait
  - test
  - artifact-promote
  - deploy

include: '/.gitlab-ci/secrets.yml'

external-build-job:
  secrets:
  - !reference [.sqa-connection, secrets]
  stage: build
  image: docker.io/alpine
  script:
    - apk add --update --no-cache dash openssl jq curl
    - dash job_scripts/queue-event.sh
  artifacts:
    paths:
      - artifacts/event_id.txt

podman-build-job:
  image: 
    name: quay.io/podman/stable:latest
  stage: build
  tags:
    - cap_sys_admin
    - dev_fuse
  variables:
    BUILDAH_ISOLATION: chroot
  before_script:
  - !reference [.project-registry-login, before_script]
  script:
    - podman build --build-arg LISTEN_PORT=8080 --build-arg REGISTRY=docker.io --build-arg jobId=${CI_JOB_ID} --build-arg BUILD_SYSTEM=GitLab -f dockerfiles/deploy.Dockerfile -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - podman push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

wait-for-completion:
  secrets:
  - !reference [.sqa-connection, secrets]
  stage: build-wait
  needs:
    - job: external-build-job
  image: docker.io/alpine
  script:
    - apk add --update --no-cache bash openssl jq curl
    - bash job_scripts/wait-for-job.sh
  artifacts:
    paths:
      - artifacts/sourcejob_id.txt
      - artifacts/job_id.txt

scan-job:
  secrets:
  - !reference [.sqa-connection, secrets]
  stage: test
  needs:
    - job: wait-for-completion
  image:
    name: quay.io/skopeo/stable:latest
    entrypoint: [""]
  script:
    - bash job_scripts/upload-for-scan.sh

prod-upload-to-artifactory:
  extends .deploy-common
  secrets:
  - !reference [.sqa-connection, secrets]
  stage: artifact-promote
  needs:
    - job: scan-job
    - job: wait-for-completion
  variables:
    K8S_ENV: prod
  script:
    - export JOB_ID=$(cat artifacts/job_id.txt)
    - export SOURCE_IMAGE="docker.akamai.com/build-images-development/basic_connector/image:0.1-$JOB_ID"
    - bash job_scripts/pull-from-artifactory.sh
    - bash job_scripts/release-to-edge.sh

qa-upload-to-artifactory:
  extends .deploy-common
  secrets:
  - !reference [.sqa-connection, secrets]
  stage: artifact-promote
  needs:
    - job: podman-build-job
  variables:
    K8S_ENV: qa
  before_script:
  - !reference [.project-registry-login, before_script]
  script:
    - export JOB_ID=$CI_JOB_ID
    - export SOURCE_IMAGE="$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - podman pull $SOURCE_IMAGE
    - bash job_scripts/release-to-edge.sh

k8s-edge-PROD-deploy:
  extends .deploy-common
  stage: deploy
  needs:
    - prod-upload-to-artifactory
  when: manual
  script:
    - echo pass

linode-PROD-deploy:
  extends .deploy-common
  secrets:
    - !reference [.linode-PROD-deploy-connection, secrets]
  stage: deploy
  environment:
    name: Linode-PROD
    url: https://hello-cd.akamai.lol
  when: manual
  needs:
    - job: wait-for-completion
    - job: scan-job
  variables:
    PODMAN_USER: "cd-user"
    PODMAN_UID: "1001"
  script:
    - export JOB_ID=$(cat artifacts/job_id.txt)
    - export SOURCE_IMAGE="docker.akamai.com/build-images-development/basic_connector/image:0.1-$JOB_ID"
    - bash job_scripts/pull-from-artifactory.sh
    - bash job_scripts/deploy.sh

k8s-PROD-deploy:
  extends .deploy-common
  secrets:
    - !reference [.k8s-PROD-deploy-connection, secrets]
  stage: deploy
  environment:
    name: LKE-PROD
    url: https://k8s-prod.linode.lol
  when: manual
  needs:
    - job: wait-for-completion
    - job: scan-job
  variables:
    K8S_ENV: prod
  artifacts:
    paths:
      - artifacts/prod-deployment.yaml
  before_script:
  - !reference [.k8s-registry-login, before_script]
  script:
    - export JOB_ID=$(cat artifacts/job_id.txt)
    - export SOURCE_IMAGE="docker.akamai.com/build-images-development/basic_connector/image:0.1-$JOB_ID"
    - bash job_scripts/pull-from-artifactory.sh
    - bash job_scripts/k8s_deploy.sh

k8s-edge-QA-deploy:
  extends .deploy-common
  stage: deploy
  needs:
    - qa-upload-to-artifactory
  script:
    - echo pass

linode-QA-deploy:
  extends .deploy-common
  secrets:
    - !reference [.linode-QA-deploy-connection, secrets]
  stage: deploy
  needs:
    - job: podman-build-job
  environment:
    name: Linode-QA
    url: https://hello-ci.akamai.lol
  variables:
    PODMAN_USER: "ci-user"
    PODMAN_UID: "1000"
  before_script:
  - !reference [.project-registry-login, before_script]
  script:
    - export JOB_ID=$CI_JOB_ID
    - podman pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - export SOURCE_IMAGE="docker.akamai.com/build-images-development/basic_connector/image:0.1-$JOB_ID"
    - podman tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $SOURCE_IMAGE 
    - bash job_scripts/deploy.sh

k8s-QA-deploy:
  extends .deploy-common
  secrets:
    - !reference [.k8s-QA-deploy-connection, secrets]
  stage: deploy
  environment:
    name: LKE-QA
    url: https://k8s-qa.linode.lol
  needs:
    - job: podman-build-job
  artifacts:
    paths:
      - artifacts/qa-deployment.yaml
  variables:
    K8S_ENV: qa
  before_script:
  - !reference [.project-registry-login, before_script]
  - !reference [.k8s-registry-login, before_script]
  script:
    - export JOB_ID=$CI_JOB_ID
    - export SOURCE_IMAGE="$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - podman pull $SOURCE_IMAGE
    - bash job_scripts/k8s_deploy.sh
